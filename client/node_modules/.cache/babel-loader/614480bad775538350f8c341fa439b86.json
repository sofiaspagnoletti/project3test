{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/ItemsDonated/ItemsDonated.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport ItemCard from \"../ItemCard\";\n\nclass ItemsDonated extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      item: \"\",\n      quantity: \"\",\n      category: \"\",\n      stock_id: \"\",\n      img_url: \"\",\n      stocks: [],\n      stock_check: [],\n      post_date: \"\" //load all stock\n\n    };\n\n    this.loadStock = () => {\n      var arr = [];\n      API.getData().then(res => {\n        this.setState({\n          stock_check: res.data\n        });\n        res.data.forEach(element => {\n          if (element.claimed == \"false\") {\n            arr.push(element);\n          } else if (element.claimed == \"true\") {\n            //console.log(\"pickupppp\"+element.claimedDate);\n            //checking date claimed is less that current date (no pickup happened)\n            var dtcl = new Date(element.claimedDate);\n            dtcl.setDate(dtcl.getDate() + 2);\n            var todays_date = new Date();\n\n            if (dtcl < todays_date) {\n              arr.push(element);\n              console.log(\"no pickup on date +2 so back to stock till 5days starting from posted date\");\n            } else {\n              console.log(\"item pickup success or going to happen\");\n            }\n          }\n\n          console.log(\"ggggggggg\");\n          var todays_date = new Date();\n          this.state.stock_check.map(item => {\n            //console.log(item.date);\n            var post_dt = new Date(item.date);\n            post_dt.setDate(post_dt.getDate() + 6);\n\n            if (post_dt < todays_date) {\n              //console.log(item.date);\n              //console.log(\"inside delete\"+id);\n              API.deleteData(item._id).then(res => {\n                //console.log(res.data+\"successfully deleted\");\n                console.log(\"successfully deleted post\"); //console.log(this.state.stock_arr.itemName);\n              }).catch(err => console.log(err)); // console.log(item.date);\n              //console.log(item.date);\n            } else {\n              console.log(\"no\");\n            }\n          }); //if claimed item not collected\n          //var dt=new Date(element.date);\n          //dt.setDate(dt.getDate()+1);\n          // console.log(dt);\n          //need to complete\n        });\n        arr.forEach(element => {\n          var date = new Date(element.date);\n          var date1 = date.getDate();\n          console.log(\"date\", date1);\n        });\n        this.setState({\n          stocks: arr\n        });\n        console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.loadStock();\n  }\n\n  render() {\n    // console.log(this.state.stocks.length);\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.stocks.length > 0 && this.state.stocks.map(stock => React.createElement(ItemCard, {\n      item: stock,\n      key: stock.stock_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ItemsDonated;","map":{"version":3,"sources":["/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/ItemsDonated/ItemsDonated.js"],"names":["React","Component","API","ItemCard","ItemsDonated","state","item","quantity","category","stock_id","img_url","stocks","stock_check","post_date","loadStock","arr","getData","then","res","setState","data","forEach","element","claimed","push","dtcl","Date","claimedDate","setDate","getDate","todays_date","console","log","map","post_dt","date","deleteData","_id","catch","err","date1","componentDidMount","render","length","stock"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport ItemCard from \"../ItemCard\";\n\n\n\nclass ItemsDonated extends Component {\n\n  state = {\n    item: \"\",\n    quantity: \"\",\n    category: \"\",\n    stock_id: \"\",\n    img_url: \"\",\n    stocks: [],\n    stock_check:[],\n    post_date:\"\"\n    \n    \n  }\n\n\n \n  //load all stock\n  componentDidMount() {\n    this.loadStock();\n  }\n\n  loadStock = () => {\n    var arr=[];\n    API.getData()\n      .then(res => {\n        \n        this.setState({ stock_check: res.data })\n         \n        res.data.forEach(element => {\n            \n          if(element.claimed ==\"false\")\n          {\n            arr.push(element);\n\n\n          }\n        else if(element.claimed==\"true\")\n        {\n          //console.log(\"pickupppp\"+element.claimedDate);\n          //checking date claimed is less that current date (no pickup happened)\n          var dtcl=new Date(element.claimedDate);\n          dtcl.setDate(dtcl.getDate()+2);\n          var todays_date=new Date(); \n          if(dtcl<todays_date)\n          {\n            arr.push(element);\n            console.log(\"no pickup on date +2 so back to stock till 5days starting from posted date\");\n          }\n          else{\n           console.log(\"item pickup success or going to happen\");\n          }\n          \n        }\n        \n\n\n      \n        console.log(\"ggggggggg\");\n        var todays_date=new Date(); \n        this.state.stock_check.map(item=>{\n\n          //console.log(item.date);\n         \n          var post_dt=new Date(item.date);\n          post_dt.setDate(post_dt.getDate()+6);\n          if(post_dt<todays_date){\n            //console.log(item.date);\n            \n              //console.log(\"inside delete\"+id);\n              API.deleteData(item._id)\n                .then(res => {\n                  \n                  //console.log(res.data+\"successfully deleted\");\n                  console.log(\"successfully deleted post\");\n                  //console.log(this.state.stock_arr.itemName);\n                }\n                )\n                .catch(err => console.log(err));\n            \n           // console.log(item.date);\n            //console.log(item.date);\n          }\n          else{\n            console.log(\"no\");\n          }\n        })\n         //if claimed item not collected\n            //var dt=new Date(element.date);\n            //dt.setDate(dt.getDate()+1);\n           // console.log(dt);\n            //need to complete\n\n            \n          \n        });\n        arr.forEach(element => {\n\n          var date=new Date(element.date);\n          var date1=date.getDate();\n          console.log(\"date\",date1);\n          \n        });\n        this.setState({ stocks: arr})\n\n        \n        console.log(res.data);\n      }\n\n      ) .catch(err => console.log(err));\n   \n\n\n\n\n  };\n\n\n\n\n\n\n\n  render() {\n   // console.log(this.state.stocks.length);\n    return (\n      <div className=\"row\">\n        {this.state.stocks.length > 0 && this.state.stocks.map(stock =>\n        \n          <ItemCard item={stock} key={stock.stock_id} />)}\n      </div>);\n  }\n\n}\nexport default ItemsDonated;"]},"metadata":{},"sourceType":"module"}