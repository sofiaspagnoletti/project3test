{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/ItemCard.js\";\nimport React, { Component } from 'react';\nimport API from \"../utils/API\"; //const ItemCard=({item})=>{\n//console.log(item);\n\nconst ItemCard = ({\n  item\n}) => {\n  console.log(item);\n\n  const updatePost = (id, claimed) => {\n    //console.log(\"inside click method\");\n    claimed = true;\n    console.log(id, claimed);\n    /*API.updatePost(id,claimed)\n    .then(res => {\n      console.log(res.data);\n    \n    } \n    )\n     .catch(err => console.log(err));\n    */\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"MultiCarousel\",\n    \"data-items\": \"1,3,5,6\",\n    \"data-slide\": \"1\",\n    id: \"MultiCarousel\",\n    \"data-interval\": \"1000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"MultiCarousel-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"sectiontitle card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Catalog\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: item.url,\n    width: \"100px\",\n    height: \"100px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"formfield card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Product:\", item.itemName), React.createElement(\"p\", {\n    className: \"formfield card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Department:\", item.category), React.createElement(\"p\", {\n    className: \"formfield card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Pickup location:\", item.Address), React.createElement(\"p\", {\n    className: \"formfield card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Posted date:\", item.date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Items available for 5 days after posting\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"navbutton btn btn-warning my-2 btn-sm\",\n    onClick: () => updatePost(item._id, item.claimed),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"i want it\")), React.createElement(\"button\", {\n    className: \"btn btn-primary leftLst\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary rightLst\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n};\n\nexport default ItemCard;\n$(document).ready(function () {\n  var itemsMainDiv = '.MultiCarousel';\n  var itemsDiv = '.MultiCarousel-inner';\n  var itemWidth = \"\";\n  $('.leftLst, .rightLst').click(function () {\n    var condition = $(this).hasClass(\"leftLst\");\n    if (condition) click(0, this);else click(1, this);\n  });\n  ResCarouselSize();\n  $(window).resize(function () {\n    ResCarouselSize();\n  }); //this function define the size of the items\n\n  function ResCarouselSize() {\n    var incno = 0;\n    var dataItems = \"data-items\";\n    var itemClass = '.item';\n    var id = 0;\n    var btnParentSb = '';\n    var itemsSplit = '';\n    var sampwidth = $(itemsMainDiv).width();\n    var bodyWidth = $('body').width();\n    $(itemsDiv).each(function () {\n      id = id + 1;\n      var itemNumbers = $(this).find(itemClass).length;\n      btnParentSb = $(this).parent().attr(dataItems);\n      itemsSplit = btnParentSb.split(',');\n      $(this).parent().attr(\"id\", \"MultiCarousel\" + id);\n\n      if (bodyWidth >= 1200) {\n        incno = itemsSplit[3];\n        itemWidth = sampwidth / incno;\n      } else if (bodyWidth >= 992) {\n        incno = itemsSplit[2];\n        itemWidth = sampwidth / incno;\n      } else if (bodyWidth >= 768) {\n        incno = itemsSplit[1];\n        itemWidth = sampwidth / incno;\n      } else {\n        incno = itemsSplit[0];\n        itemWidth = sampwidth / incno;\n      }\n\n      $(this).css({\n        'transform': 'translateX(0px)',\n        'width': itemWidth * itemNumbers\n      });\n      $(this).find(itemClass).each(function () {\n        $(this).outerWidth(itemWidth);\n      });\n      $(\".leftLst\").addClass(\"over\");\n      $(\".rightLst\").removeClass(\"over\");\n    });\n  } //this function used to move the items\n\n\n  function ResCarousel(e, el, s) {\n    var leftBtn = '.leftLst';\n    var rightBtn = '.rightLst';\n    var translateXval = '';\n    var divStyle = $(el + ' ' + itemsDiv).css('transform');\n    var values = divStyle.match(/-?[\\d\\.]+/g);\n    var xds = Math.abs(values[4]);\n\n    if (e == 0) {\n      translateXval = parseInt(xds) - parseInt(itemWidth * s);\n      $(el + ' ' + rightBtn).removeClass(\"over\");\n\n      if (translateXval <= itemWidth / 2) {\n        translateXval = 0;\n        $(el + ' ' + leftBtn).addClass(\"over\");\n      }\n    } else if (e == 1) {\n      var itemsCondition = $(el).find(itemsDiv).width() - $(el).width();\n      translateXval = parseInt(xds) + parseInt(itemWidth * s);\n      $(el + ' ' + leftBtn).removeClass(\"over\");\n\n      if (translateXval >= itemsCondition - itemWidth / 2) {\n        translateXval = itemsCondition;\n        $(el + ' ' + rightBtn).addClass(\"over\");\n      }\n    }\n\n    $(el + ' ' + itemsDiv).css('transform', 'translateX(' + -translateXval + 'px)');\n  } //It is used to get some elements from btn\n\n\n  function click(ell, ee) {\n    var Parent = \"#\" + $(ee).parent().attr(\"id\");\n    var slide = $(Parent).attr(\"data-slide\");\n    ResCarousel(ell, Parent, slide);\n  }\n});\n{\n  /* <div className=\"card\" >\n  <div className=\"card-body\">\n   <h5 className=\"sectiontitle card-title\">Catalog</h5>\n   <hr></hr>\n   <img src={item.url} width=\"100px\" height=\"100px\"></img>\n   <p className=\"formfield card-text\">Product:{item.itemName}</p>\n   <p className=\"formfield card-text\">Department:{item.category}</p>\n   <p className=\"formfield card-text\">Pickup location:{item.Address}</p>\n   <p className=\"formfield card-text\">Posted date:{item.date}</p>\n   <p>Items available for 5 days after posting</p>\n   <button type=\"button\" className=\"navbutton btn btn-warning my-2 btn-sm\" onClick={() => updatePost(item._id, item.claimed)}  >i want it</button>\n  </div>\n  </div> */\n}","map":{"version":3,"sources":["/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/ItemCard.js"],"names":["React","Component","API","ItemCard","item","console","log","updatePost","id","claimed","url","itemName","category","Address","date","_id","$","document","ready","itemsMainDiv","itemsDiv","itemWidth","click","condition","hasClass","ResCarouselSize","window","resize","incno","dataItems","itemClass","btnParentSb","itemsSplit","sampwidth","width","bodyWidth","each","itemNumbers","find","length","parent","attr","split","css","outerWidth","addClass","removeClass","ResCarousel","e","el","s","leftBtn","rightBtn","translateXval","divStyle","values","match","xds","Math","abs","parseInt","itemsCondition","ell","ee","Parent","slide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport API from \"../utils/API\"\n//const ItemCard=({item})=>{\n//console.log(item);\nconst ItemCard = ({ item }) => {\n  console.log(item);\n  const updatePost = (id, claimed) => {\n\n    //console.log(\"inside click method\");\n    claimed = true;\n    console.log(id, claimed);\n\n    /*API.updatePost(id,claimed)\n    .then(res => {\n      console.log(res.data);\n    \n    } \n    )\n     .catch(err => console.log(err));\n*/\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"MultiCarousel\" data-items=\"1,3,5,6\" data-slide=\"1\" id=\"MultiCarousel\" data-interval=\"1000\">\n          <div className=\"MultiCarousel-inner\">\n            <h5 className=\"sectiontitle card-title\">Catalog</h5>\n            <hr></hr>\n            <img src={item.url} width=\"100px\" height=\"100px\"></img>\n            <p className=\"formfield card-text\">Product:{item.itemName}</p>\n            <p className=\"formfield card-text\">Department:{item.category}</p>\n            <p className=\"formfield card-text\">Pickup location:{item.Address}</p>\n            <p className=\"formfield card-text\">Posted date:{item.date}</p>\n            <p>Items available for 5 days after posting</p>\n            <button type=\"button\" className=\"navbutton btn btn-warning my-2 btn-sm\" onClick={() => updatePost(item._id, item.claimed)}  >i want it</button>\n          </div>\n          <button className=\"btn btn-primary leftLst\"></button>\n          <button className=\"btn btn-primary rightLst\"></button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemCard;\n\n$(document).ready(function () {\n  var itemsMainDiv = ('.MultiCarousel');\n  var itemsDiv = ('.MultiCarousel-inner');\n  var itemWidth = \"\";\n\n  $('.leftLst, .rightLst').click(function () {\n      var condition = $(this).hasClass(\"leftLst\");\n      if (condition)\n          click(0, this);\n      else\n          click(1, this)\n  });\n\n  ResCarouselSize();\n\n\n\n\n  $(window).resize(function () {\n      ResCarouselSize();\n  });\n\n  //this function define the size of the items\n  function ResCarouselSize() {\n      var incno = 0;\n      var dataItems = (\"data-items\");\n      var itemClass = ('.item');\n      var id = 0;\n      var btnParentSb = '';\n      var itemsSplit = '';\n      var sampwidth = $(itemsMainDiv).width();\n      var bodyWidth = $('body').width();\n      $(itemsDiv).each(function () {\n          id = id + 1;\n          var itemNumbers = $(this).find(itemClass).length;\n          btnParentSb = $(this).parent().attr(dataItems);\n          itemsSplit = btnParentSb.split(',');\n          $(this).parent().attr(\"id\", \"MultiCarousel\" + id);\n\n\n          if (bodyWidth >= 1200) {\n              incno = itemsSplit[3];\n              itemWidth = sampwidth / incno;\n          }\n          else if (bodyWidth >= 992) {\n              incno = itemsSplit[2];\n              itemWidth = sampwidth / incno;\n          }\n          else if (bodyWidth >= 768) {\n              incno = itemsSplit[1];\n              itemWidth = sampwidth / incno;\n          }\n          else {\n              incno = itemsSplit[0];\n              itemWidth = sampwidth / incno;\n          }\n          $(this).css({ 'transform': 'translateX(0px)', 'width': itemWidth * itemNumbers });\n          $(this).find(itemClass).each(function () {\n              $(this).outerWidth(itemWidth);\n          });\n\n          $(\".leftLst\").addClass(\"over\");\n          $(\".rightLst\").removeClass(\"over\");\n\n      });\n  }\n\n\n  //this function used to move the items\n  function ResCarousel(e, el, s) {\n      var leftBtn = ('.leftLst');\n      var rightBtn = ('.rightLst');\n      var translateXval = '';\n      var divStyle = $(el + ' ' + itemsDiv).css('transform');\n      var values = divStyle.match(/-?[\\d\\.]+/g);\n      var xds = Math.abs(values[4]);\n      if (e == 0) {\n          translateXval = parseInt(xds) - parseInt(itemWidth * s);\n          $(el + ' ' + rightBtn).removeClass(\"over\");\n\n          if (translateXval <= itemWidth / 2) {\n              translateXval = 0;\n              $(el + ' ' + leftBtn).addClass(\"over\");\n          }\n      }\n      else if (e == 1) {\n          var itemsCondition = $(el).find(itemsDiv).width() - $(el).width();\n          translateXval = parseInt(xds) + parseInt(itemWidth * s);\n          $(el + ' ' + leftBtn).removeClass(\"over\");\n\n          if (translateXval >= itemsCondition - itemWidth / 2) {\n              translateXval = itemsCondition;\n              $(el + ' ' + rightBtn).addClass(\"over\");\n          }\n      }\n      $(el + ' ' + itemsDiv).css('transform', 'translateX(' + -translateXval + 'px)');\n  }\n\n  //It is used to get some elements from btn\n  function click(ell, ee) {\n      var Parent = \"#\" + $(ee).parent().attr(\"id\");\n      var slide = $(Parent).attr(\"data-slide\");\n      ResCarousel(ell, Parent, slide);\n  }\n\n});\n\n{/* <div className=\"card\" >\n\n<div className=\"card-body\">\n  <h5 className=\"sectiontitle card-title\">Catalog</h5>\n  <hr></hr>\n  <img src={item.url} width=\"100px\" height=\"100px\"></img>\n  <p className=\"formfield card-text\">Product:{item.itemName}</p>\n  <p className=\"formfield card-text\">Department:{item.category}</p>\n  <p className=\"formfield card-text\">Pickup location:{item.Address}</p>\n  <p className=\"formfield card-text\">Posted date:{item.date}</p>\n  <p>Items available for 5 days after posting</p>\n  <button type=\"button\" className=\"navbutton btn btn-warning my-2 btn-sm\" onClick={() => updatePost(item._id, item.claimed)}  >i want it</button>\n</div>\n</div> */}"]},"metadata":{},"sourceType":"module"}