{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @class SocialLogin\n */\n\n\nvar SocialLogin = function (_Component) {\n  inherits(SocialLogin, _Component);\n\n  function SocialLogin() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, SocialLogin);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = SocialLogin.__proto__ || Object.getPrototypeOf(SocialLogin)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      facebook: false,\n      google: false\n    }, _this.handleClick = function () {\n      var _this$state = _this.state,\n          facebook = _this$state.facebook,\n          google = _this$state.google;\n      var originOptions = _this.props.options;\n\n      var options = _extends({\n        provider: 'facebook',\n        onSuccess: function onSuccess(res) {\n          console.warn('Need your func at onSuccess Attr!', res);\n        },\n        onFail: function onFail(res) {\n          console.warn('Need your func at onFail Attr!', res);\n        }\n      }, originOptions, {\n        fields: 'email,first_name,last_name,picture,middle_name,name,gender'\n      });\n\n      var provider = options.provider,\n          onSuccess = options.onSuccess,\n          onFail = options.onFail,\n          fields = options.fields,\n          appId = options.appId;\n\n      if (provider === 'facebook') {\n        window.FB.login(function (res) {\n          // console.log(res)\n          if (res.authResponse) {\n            // 로그인 성공\n            window.FB.api('/me', function (res) {\n              res.picture = res.picture.data.url;\n              res.origin = FB.getAuthResponse();\n              res.token = res.origin.accessToken;\n              onSuccess(res);\n            }, {\n              fields: fields\n            });\n          } else {\n            onFail(res);\n          }\n        }, {\n          scope: 'public_profile,email',\n          return_scopes: false\n        });\n      } else if (provider === 'google') {\n        var googleLoginBtnElement = document.getElementById('button-social-google');\n        gapi.load('auth2', function () {\n          // Retrieve the singleton for the GoogleAuth library and set up the client.\n          var auth2 = gapi.auth2.init({\n            client_id: appId,\n            cookiepolicy: 'single_host_origin',\n            scope: 'profile'\n          });\n          auth2.attachClickHandler(googleLoginBtnElement, {}, function (res) {\n            res = {\n              email: res.w3.U3,\n              first_name: res.w3.ofa,\n              last_name: res.w3.wea,\n              picture: res.w3.Paa,\n              id: res.w3.Eea,\n              origin: res\n            };\n            onSuccess(res);\n          }, function (error) {\n            onFail(error);\n          });\n\n          if (!google) {\n            _this.setState({\n              google: true\n            });\n\n            googleLoginBtnElement.click();\n          }\n        });\n      }\n    }, _this.initSocialService = function () {\n      var originOptions = _this.props.options;\n      var _this$state2 = _this.state,\n          facebook = _this$state2.facebook,\n          google = _this$state2.google;\n\n      var options = _extends({\n        provider: 'facebook',\n        version: '3.0',\n        lang: 'en_US'\n      }, originOptions);\n\n      var lang = options.lang,\n          provider = options.provider,\n          appId = options.appId,\n          version = options.version;\n      if (appId === '' || appId === null || appId === undefined) return false;\n\n      if (provider === 'facebook') {\n        if (facebook) return; // 이미 init 되었을 경우 아래 동작을 수행하지 않음.\n        // FB 가 준비되면 실행될 함수를 담아둠.\n\n        window.fbAsyncInit = function () {\n          window.FB.init({\n            appId: appId,\n            version: 'v' + version,\n            autoLogAppEvents: true\n          });\n        } // FaceBook SDK Script 파일을 현재 Doc에 Tag 형태로 삽입\n        ;\n\n        (function (d, s, id) {\n          var element = d.getElementsByTagName(s)[0];\n          var fjs = element;\n          var js = element;\n          if (d.getElementById(id)) return;\n          js = d.createElement(s);\n          js.id = id;\n          js.src = 'https://connect.facebook.net/' + lang + '/sdk.js';\n          fjs.parentNode.insertBefore(js, fjs);\n\n          _this.setState({\n            facebook: true\n          });\n        })(document, 'script', 'facebook-jssdk');\n      } else if (provider === 'google') {\n        if (typeof window.gapi !== 'undefined') {\n          return false;\n        } // 이미 init 되었을 경우 아래 동작을 수행하지 않음.\n\n\n        (function (d, s, id) {\n          var element = d.getElementsByTagName(s)[0];\n          var fjs = element;\n          var js = element;\n          if (d.getElementById(id)) return;\n          js = d.createElement(s);\n          js.id = id;\n          js.src = 'https://apis.google.com/js/platform.js';\n          fjs.parentNode.insertBefore(js, fjs);\n        })(document, 'script', 'google-jssdk');\n      }\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(SocialLogin, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initSocialService();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var handleClick = this.handleClick,\n          props = this.props;\n      var options = props.options,\n          component = props.component;\n      var provider = options.provider;\n      return React.createElement('div', {\n        id: 'button-social-' + provider,\n        onClick: handleClick\n      }, component);\n    }\n  }]);\n  return SocialLogin;\n}(Component);\n\nSocialLogin.defaultProps = {\n  component: React.createElement('button', null, 'You Must have [component] attribute!')\n};\nSocialLogin.propTypes = {\n  options: PropTypes.object.isRequired\n};\nexport default SocialLogin;","map":null,"metadata":{},"sourceType":"module"}