{"ast":null,"code":"import _slicedToArray from \"/Users/sofiaspagnoletti/Desktop/second_time_around/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/PostForm/PostForm.js\";\nimport React, { Component } from \"react\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport Button from 'react-bootstrap/Button'; //import { SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION } from \"constants\";\n\nconst cardPostion = {\n  \"float\": \"left\"\n};\n\nclass PostForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      item: \"\",\n      quantity: \"\",\n      category: \"\",\n      Address: \"\",\n      stock_id: \"\",\n      stock_arr: [],\n      uploading: false,\n      url: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.deletePost = id => {\n      if (id !== undefined) {\n        //console.log(\"inside delete\"+id);\n        API.deleteData(id).then(res => {\n          this.setState({\n            stock_arr: \"\",\n            item: \"\",\n            quantity: \"\",\n            category: \"\",\n            Address: \"\",\n            url: \"\"\n          }); //console.log(res.data+\"successfully deleted\");\n\n          alert(\"successfully deleted post\"); //console.log(this.state.stock_arr.itemName);\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.getDataById = id => {\n      API.getDataById(id).then(res => {\n        this.setState({\n          stock_arr: res.data,\n          item: \"\",\n          quantity: \"\",\n          category: \"\",\n          Address: \"\"\n        });\n        console.log(\"graaaaaaaaaaab\", res.data); //console.log(this.state.stock_arr.itemName);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.item && this.state.quantity) {\n        const newPost = {\n          itemName: this.state.item,\n          quantity: this.state.quantity,\n          category: this.state.category,\n          Address: this.state.Address,\n          url: this.state.url\n        };\n        console.log(\"newPost\", newPost);\n        API.savePost(newPost).then(res => {\n          console.log(res.data);\n          this.setState({\n            stock_id: res.data._id\n          });\n          this.getDataById(res.data._id);\n        }).catch(err => console.log(err));\n      }\n    };\n  }\n\n}\n\nfunction Example() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Launch demo modal\"), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Modal heading\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Woohoo, you're reading this text in a modal!\"), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Save Changes\"))));\n}\n\nrender(React.createElement(Example, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n})); //   render() {\n//     return (\n//       <div>\n//         <div className=\"card w-50\" style={cardPostion}>\n//           <div className=\"card-body\">\n//             <h3 className=\"card-title sectiontitle\">Enter the item you want to donate:</h3>\n//             <hr></hr>\n//             <form>\n//               {/* Input Item Name */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"exampleFormControlInput1\">Product</label>\n//                 <input type=\"text\" className=\"formfield form-control\" placeholder=\"ex. Table\" name=\"item\" value={this.state.item}\n//                   onChange={this.handleInputChange} />\n//               </div>\n//               {/* Location: Address */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"exampleFormControlInput1\">Pick up address</label>\n//                 <input type=\"text\" className=\"form-control\" placeholder=\"123 Main St, Seattle, WA, 98123 \" name=\"Address\" value={this.state.Address}\n//                   onChange={this.handleInputChange} />\n//               </div>\n//               {/* Select Quantity */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"exampleFormControlSelect1\">Select quantity</label>\n//                 <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"quantity\" value={this.state.quantity}\n//                   onChange={this.handleInputChange}>\n//                   <option value=\"Choose\">Choose...</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                 </select>\n//               </div>\n//               {/* Select Category */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"inputGroupSelect01\">Select category</label>\n//                 <select className=\"custom-select\" id=\"inputGroupSelect03\" name=\"category\" value={this.state.category}\n//                   onChange={this.handleInputChange} aria-label=\"Example select with button addon\">\n//                   <option value=\"Choose\">Choose...</option>\n//                   <option value=\"Toys\">Toys</option>\n//                   <option value=\"Housing\">Housing</option>\n//                   <option value=\"Electronics\">Electronics</option>\n//                   <option value=\"Sports\">Sports</option>\n//                   <option value=\"Home\">Home</option>\n//                   <option value=\"Fashion\">Fashion</option>\n//                   <option value=\"Books\">Books</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               <div className=\"formfield form-group\">\n//                 <label >Include an image: </label>\n//                 <input type=\"file\" id=\"images\" placeholder=\"Images\" multiple onChange={this.uploadFile} />\n//               </div>\n//             </form>\n//             <button type=\"submit\" className=\"navbutton btn btn-warning my-2 btn-sm\" value=\"Submit\" disabled={!(this.state.item &&\n//               this.state.quantity)} onClick={this.handleFormSubmit}>Submit</button>\n//           </div>\n//         </div>\n//         <div>\n//           <div className=\"card\" >\n//             <div className=\"currentpost card-body\">\n//               <h3 className=\"sectiontitle\">Your Post</h3>\n//               <hr></hr>\n//               <h5 className=\"formfield\" >Donating Item and Description:{this.state.stock_arr.itemName}</h5>\n//               <h6 className=\"formfield\" >Item Qunatity:{this.state.stock_arr.quantity}</h6>\n//               <h6 className=\"formfield\" >Department:{this.state.stock_arr.category}</h6>\n//               <h6 className=\"formfield\" >Address:{this.state.stock_arr.Address}</h6>\n//               <img src={this.state.url} width=\"100px\" height=\"100px\"></img>\n//               <br></br>\n//               <button type=\"button\" className=\"navbutton btn btn-warning my-2 btn-sm\" onClick={() => this.deletePost(this.state.stock_arr._id)}  >Delete</button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n//   uploadFile = e => {\n//     const files = Array.from(e.target.files)\n//     this.setState({ uploading: true })\n//     const formData = new FormData()\n//     files.forEach((file, i) => {\n//       formData.append(i, file)\n//     })\n//     //sends the img to server\n//     fetch(`http://localhost:3001/image-upload`, {\n//       method: 'POST',\n//       body: formData\n//     })\n//       .then(res => res.json())\n//       .then(images => {\n//         this.setState({\n//           uploading: false,\n//           url: images[0].url\n//         });\n//       });\n//   }\n// }\n// export default PostForm;","map":{"version":3,"sources":["/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/PostForm/PostForm.js"],"names":["React","Component","API","Button","cardPostion","PostForm","state","item","quantity","category","Address","stock_id","stock_arr","uploading","url","handleInputChange","event","target","name","value","setState","deletePost","id","undefined","deleteData","then","res","alert","catch","err","console","log","getDataById","data","handleFormSubmit","preventDefault","newPost","itemName","savePost","_id","Example","useState","show","setShow","handleClose","handleShow","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport Button from 'react-bootstrap/Button';\n\n\n//import { SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION } from \"constants\";\nconst cardPostion = {\n  \"float\": \"left\",\n}\n\nclass PostForm extends Component {\n\n  state = {\n    item: \"\",\n    quantity: \"\",\n    category: \"\",\n    Address: \"\",\n    stock_id: \"\",\n    stock_arr: [],\n    uploading: false,\n    url: \"\"\n  }\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  deletePost = id => {\n    if (id !== undefined) {\n      //console.log(\"inside delete\"+id);\n      API.deleteData(id)\n        .then(res => {\n          this.setState({ stock_arr: \"\", item: \"\", quantity: \"\", category: \"\", Address: \"\", url: \"\" });\n          //console.log(res.data+\"successfully deleted\");\n          alert(\"successfully deleted post\");\n          //console.log(this.state.stock_arr.itemName);\n        }\n\n        )\n        .catch(err => console.log(err));\n    }\n\n  };\n\n  getDataById = id => {\n    API.getDataById(id)\n      .then(res => {\n        this.setState({ stock_arr: res.data, item: \"\", quantity: \"\", category: \"\", Address: \"\" });\n        console.log(\"graaaaaaaaaaab\", res.data);\n        //console.log(this.state.stock_arr.itemName);\n      }\n\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.item && this.state.quantity) {\n      const newPost = {\n        itemName: this.state.item,\n        quantity: this.state.quantity,\n        category: this.state.category,\n        Address: this.state.Address,\n        url: this.state.url,\n      }\n      console.log(\"newPost\", newPost);\n      API.savePost(newPost)\n        .then(res => {\n          console.log(res.data);\n          this.setState({ stock_id: res.data._id })\n          this.getDataById(res.data._id);\n        })\n        .catch(err => console.log(err));\n    }\n\n  };\n}\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch demo modal\n        </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n            </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n//   render() {\n\n//     return (\n//       <div>\n//         <div className=\"card w-50\" style={cardPostion}>\n//           <div className=\"card-body\">\n//             <h3 className=\"card-title sectiontitle\">Enter the item you want to donate:</h3>\n//             <hr></hr>\n//             <form>\n//               {/* Input Item Name */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"exampleFormControlInput1\">Product</label>\n//                 <input type=\"text\" className=\"formfield form-control\" placeholder=\"ex. Table\" name=\"item\" value={this.state.item}\n//                   onChange={this.handleInputChange} />\n//               </div>\n//               {/* Location: Address */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"exampleFormControlInput1\">Pick up address</label>\n//                 <input type=\"text\" className=\"form-control\" placeholder=\"123 Main St, Seattle, WA, 98123 \" name=\"Address\" value={this.state.Address}\n//                   onChange={this.handleInputChange} />\n//               </div>\n//               {/* Select Quantity */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"exampleFormControlSelect1\">Select quantity</label>\n//                 <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"quantity\" value={this.state.quantity}\n//                   onChange={this.handleInputChange}>\n//                   <option value=\"Choose\">Choose...</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                 </select>\n//               </div>\n//               {/* Select Category */}\n//               <div className=\"formfield form-group\">\n//                 <label htmlFor=\"inputGroupSelect01\">Select category</label>\n//                 <select className=\"custom-select\" id=\"inputGroupSelect03\" name=\"category\" value={this.state.category}\n//                   onChange={this.handleInputChange} aria-label=\"Example select with button addon\">\n//                   <option value=\"Choose\">Choose...</option>\n//                   <option value=\"Toys\">Toys</option>\n//                   <option value=\"Housing\">Housing</option>\n//                   <option value=\"Electronics\">Electronics</option>\n//                   <option value=\"Sports\">Sports</option>\n//                   <option value=\"Home\">Home</option>\n//                   <option value=\"Fashion\">Fashion</option>\n//                   <option value=\"Books\">Books</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               <div className=\"formfield form-group\">\n//                 <label >Include an image: </label>\n//                 <input type=\"file\" id=\"images\" placeholder=\"Images\" multiple onChange={this.uploadFile} />\n//               </div>\n//             </form>\n//             <button type=\"submit\" className=\"navbutton btn btn-warning my-2 btn-sm\" value=\"Submit\" disabled={!(this.state.item &&\n//               this.state.quantity)} onClick={this.handleFormSubmit}>Submit</button>\n//           </div>\n//         </div>\n//         <div>\n//           <div className=\"card\" >\n//             <div className=\"currentpost card-body\">\n//               <h3 className=\"sectiontitle\">Your Post</h3>\n//               <hr></hr>\n//               <h5 className=\"formfield\" >Donating Item and Description:{this.state.stock_arr.itemName}</h5>\n//               <h6 className=\"formfield\" >Item Qunatity:{this.state.stock_arr.quantity}</h6>\n//               <h6 className=\"formfield\" >Department:{this.state.stock_arr.category}</h6>\n//               <h6 className=\"formfield\" >Address:{this.state.stock_arr.Address}</h6>\n//               <img src={this.state.url} width=\"100px\" height=\"100px\"></img>\n//               <br></br>\n//               <button type=\"button\" className=\"navbutton btn btn-warning my-2 btn-sm\" onClick={() => this.deletePost(this.state.stock_arr._id)}  >Delete</button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   uploadFile = e => {\n//     const files = Array.from(e.target.files)\n//     this.setState({ uploading: true })\n\n//     const formData = new FormData()\n\n//     files.forEach((file, i) => {\n//       formData.append(i, file)\n//     })\n\n//     //sends the img to server\n//     fetch(`http://localhost:3001/image-upload`, {\n//       method: 'POST',\n//       body: formData\n//     })\n//       .then(res => res.json())\n//       .then(images => {\n//         this.setState({\n//           uploading: false,\n//           url: images[0].url\n//         });\n//       });\n//   }\n// }\n\n\n// export default PostForm;\n\n"]},"metadata":{},"sourceType":"module"}