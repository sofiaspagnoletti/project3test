{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/traesModal/index.js\";\nimport React, { Component } from 'react'; // import API from \"../utils/API\";\n// import \"./itemcardstyle.css\";\n\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react'; // import Geocode from \"react-geocode\";\n\nimport spinner from \"../SimpleMap/mr_worldwide.gif\";\nconst style = {\n  width: '93%',\n  height: '100%'\n};\n\nclass TraesModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      position: this.props.position\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"ModalMap\" + this.props.modalID,\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalCenterTitle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog modal-dialog-centered modal-dialog-scrollable\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalCenterTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Location of Item\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-body address-map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.position ? React.createElement(Map, {\n      google: this.props.google,\n      style: style,\n      initialCenter: {\n        lat: this.state.position.coords.latitude,\n        lng: this.state.position.coords.longitude\n      },\n      zoom: 10,\n      onClick: this.onMapClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      title: 'Current Location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'user',\n      title: \"Item's Address\",\n      position: {\n        lat: this.props.lat,\n        lng: this.props.lng\n      },\n      icon: {\n        url: \"https://mt.google.com/vt/icon/name=icons/onion/SHARED-mymaps-container-bg_4x.png,icons/onion/SHARED-mymaps-container_4x.png,icons/onion/1502-shape_star_4x.png&highlight=ff000000,0288D1,ff000000&scale=0.9\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })) : // <p>waiting for map to load</p>\n    React.createElement(\"img\", {\n      src: spinner,\n      alt: \"Waiting for map to load spinner\",\n      style: {\n        height: '300px',\n        align: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"navbutton btn btn-warning my-2 btn-sm\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Close\"))))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyC43qVzPHXSL3TaW4zNV8Kwu6a3PdmLcp8\"\n})(TraesModal);","map":{"version":3,"sources":["/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/traesModal/index.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","spinner","style","width","height","TraesModal","state","position","props","render","modalID","google","lat","coords","latitude","lng","longitude","onMapClicked","onMarkerClick","url","align","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import API from \"../utils/API\";\n// import \"./itemcardstyle.css\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n// import Geocode from \"react-geocode\";\nimport spinner from \"../SimpleMap/mr_worldwide.gif\";\n\n\nconst style = {\n    width: '93%',\n    height: '100%',\n  }\n\nclass TraesModal extends Component {\n\n    state = {\n        position: this.props.position,\n       \n    }\n\n    render() { \n        return (\n        <div>\n\n{/* Google Maps Feature */}\n          {/*<!-- Button trigger modal for Maps --> */}\n          {/* <span><button type=\"button\" class=\"navbutton btn btn-warning my-2 btn-sm\" data-toggle=\"modal\" data-target={\"#ModalMap\" + this.props.item._id} onClick={() => this.getUserCoordinates(this.props.item.Address)}>Location</button></span> */}\n\n          {/*<!-- Modal for Maps -->*/}\n          <div className=\"modal fade\" id={\"ModalMap\" + this.props.modalID} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">Location of Item</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body address-map\">\n\n                  <div>\n                    {/* {this.getUserCoordinates(this.props.item.Address)} */}\n\n                    {/* Google Maps*/}\n                    {\n\n                      this.state.position ?\n                        (<Map\n                          google={this.props.google}\n                          style={style}\n                          initialCenter={{\n                            lat: this.state.position.coords.latitude,\n                            lng: this.state.position.coords.longitude\n                          }}\n                          zoom={10}\n                          onClick={this.onMapClicked}\n                        >\n                          <Marker onClick={this.onMarkerClick}\n                            name={'Current location'}\n                            title={'Current Location'} />\n\n                          <Marker onClick={this.onMarkerClick}\n                            name={'user'}\n                            title={\"Item's Address\"}\n                            position={{ lat: this.props.lat, lng: this.props.lng }}\n                            icon={{\n                              url: \"https://mt.google.com/vt/icon/name=icons/onion/SHARED-mymaps-container-bg_4x.png,icons/onion/SHARED-mymaps-container_4x.png,icons/onion/1502-shape_star_4x.png&highlight=ff000000,0288D1,ff000000&scale=0.9\",\n\n                            }} />\n\n\n                        </Map >) : (\n                          // <p>waiting for map to load</p>\n                          <img src={spinner} alt=\"Waiting for map to load spinner\" style={{ height: '300px', align: 'center' }} />\n                        )\n                    }\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"navbutton btn btn-warning my-2 btn-sm\" data-dismiss=\"modal\">Close</button>\n\n                </div>\n              </div>\n            </div>\n          </div>\n          </div>\n        )}\n\n        }\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyC43qVzPHXSL3TaW4zNV8Kwu6a3PdmLcp8\"\n  })(TraesModal);"]},"metadata":{},"sourceType":"module"}