{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/ItemCard.js\";\nimport React, { Component } from 'react';\nimport API from \"../utils/API\";\nimport \"./itemcardstyle.css\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nimport spinner from \"../components/SimpleMap/mr_worldwide.gif\";\nimport MapModal from \"../components/traesModal\";\n\nvar dateFormat = require('dateformat');\n\nconst style = {\n  width: '93%',\n  height: '100%'\n};\n\nclass ItemCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      number: \"\",\n      //claimed_date:\"\",\n      text: \"Claim it\",\n      // mapAddress: \"Location\",\n      // idtest: \"\",\n      position: \"\" // User provides an address and Geocode will provide the lat and lng coordinates\n\n    };\n\n    this.getUserCoordinates = address => {\n      console.log('getUserCoordinate test', address);\n      Geocode.setApiKey(\"AIzaSyC43qVzPHXSL3TaW4zNV8Kwu6a3PdmLcp8\");\n      Geocode.enableDebug(); // Get latidude & longitude from address\n\n      Geocode.fromAddress(address).then(response => {\n        const _response$results$0$g = response.results[0].geometry.location,\n              lat = _response$results$0$g.lat,\n              lng = _response$results$0$g.lng;\n        this.setState({\n          latd: lat,\n          lngd: lng\n        });\n        console.log('donate user ', lat, lng); // console.log('donate user');\n      }, error => {\n        console.log('getUserCoordinate test err', address);\n        console.error(error);\n      });\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = id => {\n      console.log(\"inside click\" + id);\n      var claimed_date = new Date();\n      console.log(\"ooo\" + claimed_date); //this.setState({idtest:id})\n      //var claimedDate=claimed_date;\n\n      API.updatePost(id).then(res => {\n        console.log(res.data);\n      }).catch(err => console.log(err));\n      this.setState({\n        text: \"claimed\"\n      });\n    };\n\n    this.updatePost = () => {\n      console.log(this.state.claimed_date);\n      console.log(this.state.idtest); // console.log(\"gafsgas\");\n\n      const msg = {\n        number: this.state.number,\n        message: \"Thanks for visiting SecondTimeAround!order confirmed.collect your item within 2 days\"\n      };\n      API.getEmail(msg).then(res => {\n        // this.props.updatestock(this.state.stocks);\n        console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    // Google Geolocation Position\n    navigator.geolocation.getCurrentPosition(position => {\n      // console.log(\"Geolocation Testing\");\n      // console.log(position)\n      this.setState({\n        position\n      });\n    });\n  }\n\n  render() {\n    //console.log(this.props.item.itemName);\n    return React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card cardstyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: this.props.item.url,\n      width: \"100px\",\n      height: \"200px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"sectiontitle card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.props.item.itemName), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"cardcontent card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Pick it up at \", this.props.item.Address), React.createElement(\"p\", {\n      className: \"cardcontent card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"This item was posted on  \", dateFormat(this.props.item.date, \"dddd, mmmm dS, yyyy, h:MM:ss TT\"), \" .\")), React.createElement(\"div\", {\n      class: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"navbuttonprofile btn btn-warning my-2 btn-sm\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#exampleModalCenter1\" + this.props.item._id,\n      onClick: () => this.handleClick(this.props.item._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.text), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"navbutton btn btn-warning my-2 btn-sm\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#ModalMap\" + this.props.item._id,\n      onClick: () => this.getUserCoordinates(this.props.item.Address),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Location\"))), React.createElement(MapModal, {\n      modalID: this.props.item._id,\n      position: this.state.position,\n      lat: this.state.latd,\n      lng: this.state.lngd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"exampleModalCenter1\" + this.props.item._id,\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalCenterTitle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog modal-dialog-centered\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalCenterTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Pick up information\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"InpuNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Number\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"Inputnumber\",\n      \"aria-describedby\": \"Name\",\n      placeholder: \"Enter Number\",\n      name: \"number\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"FormControlTextarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Message | Please specify the day and time of pick up\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"FormControlTextarea\",\n      rows: \"\",\n      placeholder: \"Enter optional message to user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Submit\",\n      className: \"navbutton btn btn-warning my-2 btn-sm\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.updatePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Submit\"))))))));\n  }\n\n}\n\nexport default ItemCard; // export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyC43qVzPHXSL3TaW4zNV8Kwu6a3PdmLcp8\"\n// })(ItemCard);","map":{"version":3,"sources":["/Users/sofiaspagnoletti/Desktop/second_time_around/client/src/components/ItemCard.js"],"names":["React","Component","API","Map","InfoWindow","Marker","GoogleApiWrapper","Geocode","spinner","MapModal","dateFormat","require","style","width","height","ItemCard","state","number","text","position","getUserCoordinates","address","console","log","setApiKey","enableDebug","fromAddress","then","response","results","geometry","location","lat","lng","setState","latd","lngd","error","handleInputChange","event","target","name","value","handleClick","id","claimed_date","Date","updatePost","res","data","catch","err","idtest","msg","message","getEmail","componentDidMount","navigator","geolocation","getCurrentPosition","render","props","item","url","itemName","Address","date","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport API from \"../utils/API\";\nimport \"./itemcardstyle.css\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nimport spinner from \"../components/SimpleMap/mr_worldwide.gif\"\nimport MapModal from \"../components/traesModal\";\nvar dateFormat = require('dateformat');\n\n\nconst style = {\n  width: '93%',\n  height: '100%',\n}\n\nclass ItemCard extends Component {\n\n  state = {\n    number: \"\",\n    //claimed_date:\"\",\n    text: \"Claim it\",\n    // mapAddress: \"Location\",\n    // idtest: \"\",\n    position: \"\"\n\n  }\n\n  // User provides an address and Geocode will provide the lat and lng coordinates\n  getUserCoordinates = address => {\n    console.log('getUserCoordinate test', address)\n    Geocode.setApiKey(\"AIzaSyC43qVzPHXSL3TaW4zNV8Kwu6a3PdmLcp8\")\n    Geocode.enableDebug();\n    // Get latidude & longitude from address\n    Geocode.fromAddress(address).then(\n      response => {\n        const { lat, lng } = response.results[0].geometry.location;\n        this.setState({\n          latd: lat,\n          lngd: lng\n        });\n        console.log('donate user ', lat, lng);\n        // console.log('donate user');\n      },\n      error => {\n        console.log('getUserCoordinate test err', address)\n        console.error(error);\n      }\n    );\n  }\n\n  componentDidMount() {\n    // Google Geolocation Position\n    navigator.geolocation.getCurrentPosition((position) => {\n      // console.log(\"Geolocation Testing\");\n      // console.log(position)\n      this.setState({\n        position\n      })\n    });\n  }\n\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleClick = (id) => {\n\n    console.log(\"inside click\" + id);\n    var claimed_date = new Date();\n    console.log(\"ooo\" + claimed_date);\n    //this.setState({idtest:id})\n    //var claimedDate=claimed_date;\n    API.updatePost(id)\n      .then(res => {\n        console.log(res.data);\n      })\n      .catch(err => console.log(err));\n\n    this.setState({\n      text: \"claimed\"\n    });\n\n  };\n\n  updatePost = () => {\n    console.log(this.state.claimed_date);\n    console.log(this.state.idtest);\n    // console.log(\"gafsgas\");\n    const msg = {\n      number: this.state.number,\n      message: \"Thanks for visiting SecondTimeAround!order confirmed.collect your item within 2 days\"\n    }\n\n    API.getEmail(msg)\n      .then(res => {\n        // this.props.updatestock(this.state.stocks);\n        console.log(res.data);\n      })\n      .catch(err => console.log(err));\n\n  };\n\n\n\n  render() {\n    //console.log(this.props.item.itemName);\n\n    return (\n      <div className=\"col-md-4\" >\n        <div className=\"card cardstyle\">\n          <img className=\"card-img-top\" src={this.props.item.url} width=\"100px\" height=\"200px\"></img>\n          <div className=\"card-body\">\n            <h5 className=\"sectiontitle card-title\">{this.props.item.itemName}</h5>\n            <hr></hr>\n            <p className=\"cardcontent card-text\">Pick it up at {this.props.item.Address}</p>\n            <p className=\"cardcontent card-text\">This item was posted on  {dateFormat(this.props.item.date, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")} .</p>\n            {/* <p>Items available for 5 days after posting</p> */}\n          </div>\n          <div class=\"card-footer\">\n            {/*<!-- Button trigger modal for Claim it -->*/}\n          <span><button type=\"button\" className=\"navbuttonprofile btn btn-warning my-2 btn-sm\" data-toggle=\"modal\" data-target={\"#exampleModalCenter1\" + this.props.item._id} onClick={() => this.handleClick(this.props.item._id)} >{this.state.text}</button>\n            {/*<!-- Button trigger modal for Maps --> */}\n            <button type=\"button\" class=\"navbutton btn btn-warning my-2 btn-sm\" data-toggle=\"modal\" data-target={\"#ModalMap\" + this.props.item._id} onClick={() => this.getUserCoordinates(this.props.item.Address)}>Location</button></span>\n          </div>\n           \n           <MapModal modalID={this.props.item._id} position={this.state.position} lat={this.state.latd} lng={this.state.lngd}/>\n\n          {/*<!-- Button trigger modal for Claim it -->*/}\n          {/* <div className=\"col-md-4\">\n            <div className=\"\">\n              <button type=\"button\" className=\"navbutton btn btn-warning my-2 btn-sm\" data-toggle=\"modal\" data-target={\"#exampleModalCenter1\" + this.props.item._id} onClick={() => this.handleClick(this.props.item._id)} >{this.state.text}</button>\n            </div>\n          </div> */}\n\n          {/*<!-- Modal for Claim it -->*/}\n          <div className=\"modal fade\" id={\"exampleModalCenter1\" + this.props.item._id} tabIndex=\"-1\" role=\"dialog\"\n            aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">Pick up information</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <form>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"InpuNumber\">Number</label>\n                      <input type=\"text\" className=\"form-control\" id=\"Inputnumber\" aria-describedby=\"Name\"\n                        placeholder=\"Enter Number\" name=\"number\" onChange={this.handleInputChange} />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"FormControlTextarea\">Message | Please specify the day and time of pick up</label>\n                      <textarea className=\"form-control\" id=\"FormControlTextarea\" rows=\"\"\n                        placeholder=\"Enter optional message to user\"></textarea>\n                    </div>\n                  </form>\n                  <div className=\"modal-footer\">\n                    <button type=\"button\" value=\"Submit\" className=\"navbutton btn btn-warning my-2 btn-sm\" data-dismiss=\"modal\" onClick={this.updatePost} >Submit</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          \n\n        </div>\n\n      </div>\n\n\n\n    );\n  }\n}\n\nexport default ItemCard;\n\n\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyC43qVzPHXSL3TaW4zNV8Kwu6a3PdmLcp8\"\n// })(ItemCard);\n"]},"metadata":{},"sourceType":"module"}