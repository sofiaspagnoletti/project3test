'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var PropTypes = _interopDefault(require('prop-types'));

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();







var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};











var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

/**
 * @class SocialLogin
 */

var SocialLogin = function (_Component) {
  inherits(SocialLogin, _Component);

  function SocialLogin() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, SocialLogin);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = SocialLogin.__proto__ || Object.getPrototypeOf(SocialLogin)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      facebook: false,
      google: false
    }, _this.handleClick = function () {
      var _this$state = _this.state,
          facebook = _this$state.facebook,
          google = _this$state.google;
      var originOptions = _this.props.options;

      var options = _extends({
        provider: 'facebook',
        onSuccess: function onSuccess(res) {
          console.warn('Need your func at onSuccess Attr!', res);
        },
        onFail: function onFail(res) {
          console.warn('Need your func at onFail Attr!', res);
        }
      }, originOptions, {
        fields: 'email,first_name,last_name,picture,middle_name,name,gender'
      });
      var provider = options.provider,
          onSuccess = options.onSuccess,
          onFail = options.onFail,
          fields = options.fields,
          appId = options.appId;


      if (provider === 'facebook') {
        window.FB.login(function (res) {
          // console.log(res)
          if (res.authResponse) {
            // 로그인 성공
            window.FB.api('/me', function (res) {
              res.picture = res.picture.data.url;
              res.origin = FB.getAuthResponse();
              res.token = res.origin.accessToken;
              onSuccess(res);
            }, { fields: fields });
          } else {
            onFail(res);
          }
        }, { scope: 'public_profile,email', return_scopes: false });
      } else if (provider === 'google') {
        var googleLoginBtnElement = document.getElementById('button-social-google');

        gapi.load('auth2', function () {
          // Retrieve the singleton for the GoogleAuth library and set up the client.
          var auth2 = gapi.auth2.init({
            client_id: appId,
            cookiepolicy: 'single_host_origin',
            scope: 'profile'
          });
          auth2.attachClickHandler(googleLoginBtnElement, {}, function (res) {
            res = {
              email: res.w3.U3,
              first_name: res.w3.ofa,
              last_name: res.w3.wea,
              picture: res.w3.Paa,
              id: res.w3.Eea,
              origin: res
            };
            onSuccess(res);
          }, function (error) {
            onFail(error);
          });

          if (!google) {
            _this.setState({ google: true });
            googleLoginBtnElement.click();
          }
        });
      }
    }, _this.initSocialService = function () {
      var originOptions = _this.props.options;
      var _this$state2 = _this.state,
          facebook = _this$state2.facebook,
          google = _this$state2.google;

      var options = _extends({
        provider: 'facebook',
        version: '3.0',
        lang: 'en_US'
      }, originOptions);
      var lang = options.lang,
          provider = options.provider,
          appId = options.appId,
          version = options.version;


      if (appId === '' || appId === null || appId === undefined) return false;

      if (provider === 'facebook') {
        if (facebook) return;
        // 이미 init 되었을 경우 아래 동작을 수행하지 않음.

        // FB 가 준비되면 실행될 함수를 담아둠.
        window.fbAsyncInit = function () {
          window.FB.init({
            appId: appId,
            version: 'v' + version,
            autoLogAppEvents: true
          });
        }
        // FaceBook SDK Script 파일을 현재 Doc에 Tag 형태로 삽입
        ;(function (d, s, id) {
          var element = d.getElementsByTagName(s)[0];
          var fjs = element;
          var js = element;
          if (d.getElementById(id)) return;
          js = d.createElement(s);
          js.id = id;
          js.src = 'https://connect.facebook.net/' + lang + '/sdk.js';
          fjs.parentNode.insertBefore(js, fjs);
          _this.setState({
            facebook: true
          });
        })(document, 'script', 'facebook-jssdk');
      } else if (provider === 'google') {
        if (typeof window.gapi !== 'undefined') {
          return false;
        }
        // 이미 init 되었을 경우 아래 동작을 수행하지 않음.

        (function (d, s, id) {
          var element = d.getElementsByTagName(s)[0];
          var fjs = element;
          var js = element;
          if (d.getElementById(id)) return;
          js = d.createElement(s);
          js.id = id;
          js.src = 'https://apis.google.com/js/platform.js';
          fjs.parentNode.insertBefore(js, fjs);
        })(document, 'script', 'google-jssdk');
      }
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(SocialLogin, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.initSocialService();
    }
  }, {
    key: 'render',
    value: function render() {
      var handleClick = this.handleClick,
          props = this.props;
      var options = props.options,
          component = props.component;
      var provider = options.provider;

      return React__default.createElement(
        'div',
        { id: 'button-social-' + provider, onClick: handleClick },
        component
      );
    }
  }]);
  return SocialLogin;
}(React.Component);

SocialLogin.defaultProps = {
  component: React__default.createElement(
    'button',
    null,
    'You Must have [component] attribute!'
  )
};

SocialLogin.propTypes = {
  options: PropTypes.object.isRequired
};

module.exports = SocialLogin;
